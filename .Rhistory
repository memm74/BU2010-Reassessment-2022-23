library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
tidyverse_conflicts()
morning_calls <- 12
morning_calls
morning_calls <- 14
morning_calls
4+2
4 + 2
4+2
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_morning_calls
vector <- ("morning", 28.7)
vector <- c("morning", 28.7)
vector
?c
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
weekly_calls
weekly_morning_calls > weekly_afternoon_calls
?names
names(weekly_calls) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
weekly_calls
vector <- ("morning", 28.7)
vector <- c("morning", 28.7)
vector
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
plot(weekly_calls)
plot(weekly_calls, type = "l")
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
plot(weekly_morning_calls,type="l",col="red")
#lines adds to existing plot instead of starting a new one
lines(weekly_afternoon_calls,type="l",col="blue")
#ylim sets the range for the y axis
plot(weekly_morning_calls,ylim=c(0,25),type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="blue")
plot(weekly_morning_calls,type="l",col="red")
plot(weekly_morning_calls,ylim=c(0,25),type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="blue")
?head
?tail
?str
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
apple_dividend <- data.frame(date, dividend)
apple_dividend
head(apple_dividend)
?head
head(iris3)
str(iris3)
apple_dividend
apple_dividend[2:4,]
apple_dividend[,2]
apple_dividend$dividend
subset(apple_dividend, date > as.Date("2021-07-01"))
apple_dividend
subset(apple_dividend, dividende > 0.21)
subset(apple_dividend, dividend > 0.21)
subset(apple_dividend, dividend < 0.21)
apple_dividend
apple_dividend$company <- "apple"
apple_dividend
apple_dividend$company <- NULL
apple_dividend
setwd("C:/Users/memeckel/OneDrive - UCLan/BU2010/2022-23/GitHub/bu2010-web-scraping-happy551")
# Load the packages you need
library(rvest)
library(stringr)
library(tibble)
# Read (import) the scrapingStaedtler html file. It is in this repo.
Staedtler <- read_html("scrapingStaedtler.html")
# Scrape the brand names, product names and prices into three vectors and clean them.
brand <- Staedtler %>% html_nodes(".brand") %>% html_text()
brand
brand <- str_remove_all(brand, "\\r\\n")
brand
product <- Staedtler %>% html_nodes(".ProductName .title") %>% html_text()
product
product <- str_remove_all(product, "\\r\\n")
product
price <- Staedtler %>% html_nodes(".price") %>% html_text()
price
price <- str_remove_all(price, "\\r\\nÂ£")
price
# Combine the three vectors into one data frame.
pendata <- data.frame(brand, product, price)
pendata
View(pendata)
View(pendata)
setwd("C:/Users/memeckel/OneDrive - UCLan/BU2010/2022-23/GitHub/BU2010-Reassessment-2022-23")
# Set the correct working directory for your machine, i.e. the directory you cloned this repo to
setwd("C:/Users/memeckel/OneDrive - UCLan/BU2010/2022-23/GitHub/BU2010-Reassessment-2022-23")
# Load the packages you need
library(rvest)
library(stringr)
library(tibble)
# Read (import) the scrapingStaedtler html file. It is in this repo.
ftse <- read_html("Table - FTSE 100 FTSE constituents London Stock Exchange.html")
# Set the correct working directory for your machine, i.e. the directory you cloned this repo to
setwd("C:/Users/memeckel/OneDrive - UCLan/BU2010/2022-23/GitHub/BU2010-Reassessment-2022-23")
# Load the packages you need
library(rvest)
library(stringr)
library(tibble)
# Read (import) the scrapingStaedtler html file. It is in this repo.
ftse <- read_html("Table - FTSE 100 FTSE constituents London Stock Exchange.html")
# Scrape the brand names, product names and prices into three vectors and clean them.
code <- ftse %>% html_nodes(".blue-text") %>% html_text()
code
name <- ftse %>% html_nodes(".instrument-name") %>% html_text()
name
price <- ftse %>% html_nodes(".instrument-lastprice") %>% html_text()
price
price <- str_remove_all(price, ",")
price
price <- str_remove_all(price, " ")
price
# Combine the three vectors into one data frame.
ftse100 <- data.frame(code, name, price)
ftse100
View(ftse100)
View(ftse100)
# Set the correct working directory for your machine, i.e. the directory you cloned this repo to
setwd("C:/Users/memeckel/OneDrive - UCLan/BU2010/2022-23/GitHub/BU2010-Reassessment-2022-23")
# Load the packages you need
library(rvest)
library(stringr)
library(tibble)
# Read (import) the first page (Ocado up to Frasers) of the html file with the FTSE 100 share prices. It is in this repo.
ftse <- read_html("Table - FTSE 100 FTSE constituents London Stock Exchange.html")
# Scrape the codes, names and prices into three vectors and clean them.
code <- ftse %>% html_nodes(".blue-text") %>% html_text()
name <- ftse %>% html_nodes(".instrument-name") %>% html_text()
price <- ftse %>% html_nodes(".instrument-lastprice") %>% html_text()
price
price <- str_remove_all(price, ",")
price <- str_remove_all(price, " ")
price
# Combine the three vectors into one data frame.
ftse100 <- data.frame(code, name, price)
ftse100
